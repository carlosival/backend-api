<?php

namespace DietaBundle\Repository;

/**
 * UserRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class UserRepository extends \Doctrine\ORM\EntityRepository
{

    public function findRecentRecipesOrderedByDate($id, \DateTime $timespam , $limit =5, $offset=5)
    {
        // 'SELECT r u FROM DietaBundle:User DietaBundle:Receta r LEFT JOIN u.recetas WHERE (u.id = :userid AND :timespam > r.updatedAt)  ORDER BY r.updatedAt DESC'
        /*return $this->getEntityManager()
            ->createQueryBuilder( 'user')
            ->select('ownrecetas')
            ->leftJoin()join('user.recetas' ,'ownrecetas')
            ->andwhere('user.id = :userid  AND ownrecetas.updatedAt < :timespam' )
            ->orderBy('ownrecetas.updatedAt', 'DESC')
            ->setParameter('userid',$id)
            ->setParameter('timespam', $timespam)
            ->getResult();*/
    }

    public function findTotalAmount () {

        $query = $this->getEntityManager()->createQueryBuilder();

     return   $query
            ->select('COUNT(user)')
            ->from('DietaBundle:User', 'user')
          //  ->setMaxResults($amount)
           // ->setFirstResult($offset)
            ->getQuery()
            ->getSingleScalarResult();

    }

    public function findSomeUsers($user,$amount = 10,$offset = 0) {

        $query = $this->getEntityManager()->createQueryBuilder();

        return   $query
            ->select('user')
            ->from('DietaBundle:User', 'user')
            ->andWhere('user != :usuario' )
            ->setParameter('usuario' , $user)
            ->setMaxResults($amount)
             ->setFirstResult($offset)
            ->getQuery()
            ->getResult();

    }



}
